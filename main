#include <SFML/Graphics.hpp>
#include<iostream>;
#include <SFML/Audio.hpp>
#include<sstream>
using namespace std;

using namespace sf;
int main()
{
	int score = 0;
	int cntx = 0;
	int cnty = 0;
	RenderWindow window(VideoMode(1280, 720), "pac-man!");
	Font opp;
	opp.loadFromFile("Font.ttf");
	Text score1;
	score1.setFont(opp);
	score1.setFillColor(Color::Red);
	score1.setStyle(Text::Bold);
	score1.setCharacterSize(20);
	score1.setPosition(1100, 30);
	score1.setString("Score:");
	Text score2;
	score2.setFont(opp);
	score2.setFillColor(Color::White);
	score2.setStyle(Text::Bold);
	score2.setCharacterSize(20);
	score2.setPosition(1200, 30);
	SoundBuffer op;
	op.loadFromFile("sound.wav");
	Sound coin;
	coin.setBuffer(op);
	SoundBuffer bg;
	bg.loadFromFile("bimbo.wav");
	coin.setVolume(100);
	Sound bgg;
	bgg.setBuffer(bg);
	bgg.play();
	bgg.setVolume(40);
	Sprite pacman;
	CircleShape c1(15);
	Texture c11;
	c11.loadFromFile("coins.gif");
	c1.setTexture(&c11);
	c1.setPosition(500, 70);
	CircleShape c2(15);
	c2.setTexture(&c11);
	c2.setPosition(400, 70);
	CircleShape c3(15);
	c3.setTexture(&c11);
	c3.setPosition(300, 70);
	CircleShape c4(15);
	c4.setTexture(&c11);
	c4.setPosition(200, 70);
	CircleShape c5(15);
	c5.setTexture(&c11);
	c5.setPosition(600, 70);
	CircleShape c6(15);
	c6.setTexture(&c11);
	c6.setPosition(700, 70);
	CircleShape c7(15);
	c7.setTexture(&c11);
	c7.setPosition(800, 70);
	CircleShape c8(15);
	c8.setTexture(&c11);
	c8.setPosition(900, 70);
	CircleShape c9(15);
	c9.setTexture(&c11);
	c9.setPosition(1000, 70);
	CircleShape c10(15);
	c10.setTexture(&c11);
	c10.setPosition(1100, 70);
	CircleShape c12(15);
	c12.setTexture(&c11);
	c12.setPosition(400,400);
	CircleShape c13(15);
	c13.setTexture(&c11);
	c13.setPosition(400, 300);
	CircleShape c14(15);
	c14.setTexture(&c11);
	c14.setPosition(600, 400);
	CircleShape c15(15);
	c15.setTexture(&c11);
	c15.setPosition(600, 300);
	CircleShape c16(15);
	c16.setTexture(&c11);
	c16.setPosition(800, 400);
	CircleShape c17(15);
	c17.setTexture(&c11);
	c17.setPosition(800, 300);
	CircleShape c18(15);
	c18.setTexture(&c11);
	c18.setPosition(1000, 400);
	CircleShape c19(15);
	c19.setTexture(&c11);
	c19.setPosition(1000, 300);
	pacman.setScale(3,3);
	window.setFramerateLimit(30);
	pacman.setPosition(30, 30);
	RectangleShape b1 (Vector2f(20, 300));
	b1.setPosition(1100,200);
	RectangleShape b2(Vector2f(1050, 20));
	b2.setPosition(150,100);
	b1.setFillColor(Color::Blue);
	b2.setFillColor(Color::Blue);
	RectangleShape b3(Vector2f(20, 300));
	b3.setPosition(900, 200);
	b3.setFillColor(Color::Blue);
	RectangleShape b4(Vector2f(20, 300));
	b4.setPosition(700, 200);
	b4.setFillColor(Color::Blue);
	RectangleShape b5(Vector2f(20, 300));
	b5.setPosition(500, 200);
	b5.setFillColor(Color::Blue);
	RectangleShape b6(Vector2f(20, 300));
	b6.setPosition(300, 200);
	b6.setFillColor(Color::Blue);
	RectangleShape b7(Vector2f(20, 300));
	b7.setPosition(0, 200);
	b7.setFillColor(Color::Blue);
	RectangleShape b8(Vector2f(1050, 20));
	b8.setPosition(150,600);
	b8.setFillColor(Color::Blue);
	RectangleShape l1(Vector2f(1280,20));
	l1.setPosition(0,0);
	l1.setFillColor(Color::Blue);
	RectangleShape l2(Vector2f(1280, 20));
	l2.setPosition(0,700);
	l2.setFillColor(Color::Blue);
	RectangleShape l3(Vector2f(20,680));
	l3.setPosition(0,20);
	l3.setFillColor(Color::Blue);
	RectangleShape l4(Vector2f(20, 680));
	l4.setPosition(1260, 20);
	l4.setFillColor(Color::Blue);
	Texture tx;
	tx.loadFromFile("anime11.png");
	pacman.setTexture(tx);
	pacman.setTextureRect(IntRect(0,0,15,14.5));
	while (window.isOpen())
	{
		Event event;
		while (window.pollEvent(event))
		{
			if (event.type == Event::Closed) {
				window.close();
			}
		}
		if (Keyboard::isKeyPressed(Keyboard::Key::Left)) {
			pacman.move(-7, 0);
			cnty = 1;
			cntx++;
			if (pacman.getGlobalBounds().intersects(b1.getGlobalBounds())) {
				pacman.move(7, 0);
			}
			if (pacman.getGlobalBounds().intersects(b2.getGlobalBounds())) {
				pacman.move(7, 0);
			}
			if (pacman.getGlobalBounds().intersects(b3.getGlobalBounds())) {
				pacman.move(7, 0);
			}
			if (pacman.getGlobalBounds().intersects(b4.getGlobalBounds())) {
				pacman.move(7, 0);
			}
			if (pacman.getGlobalBounds().intersects(b5.getGlobalBounds())) {
				pacman.move(7, 0);
			}
			if (pacman.getGlobalBounds().intersects(b6.getGlobalBounds())) {
				pacman.move(7, 0);
			}
			if (pacman.getGlobalBounds().intersects(b7.getGlobalBounds())) {
				pacman.move(7, 0);
			}
			if (pacman.getGlobalBounds().intersects(b8.getGlobalBounds())) {
				pacman.move(7, 0);
			}
			if (pacman.getGlobalBounds().intersects(l1.getGlobalBounds())) {
				pacman.move(7, 0);
			}
			if (pacman.getGlobalBounds().intersects(l2.getGlobalBounds())) {
				pacman.move(7, 0);
			}
			if (pacman.getGlobalBounds().intersects(l3.getGlobalBounds())) {
				pacman.move(7, 0);
			}
			if (pacman.getGlobalBounds().intersects(l4.getGlobalBounds())) {
				pacman.move(7, 0);
			}
			if (pacman.getGlobalBounds().intersects(c1.getGlobalBounds())) {
				c1.setPosition(-100, -100);
				score+=10;
				coin.play();
				
			}
			if (pacman.getGlobalBounds().intersects(c2.getGlobalBounds())) {
				c2.setPosition(-100, -100);
				score+=10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c3.getGlobalBounds())) {
				c3.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c4.getGlobalBounds())) {
				c4.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c5.getGlobalBounds())) {
				c5.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c6.getGlobalBounds())) {
				c6.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c7.getGlobalBounds())) {
				c7.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c8.getGlobalBounds())) {
				c8.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c9.getGlobalBounds())) {
				c9.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c10.getGlobalBounds())) {
				c10.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c12.getGlobalBounds())) {
				c12.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c13.getGlobalBounds())) {
				c13.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c14.getGlobalBounds())) {
				c14.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c15.getGlobalBounds())) {
				c15.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c16.getGlobalBounds())) {
				c16.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c17.getGlobalBounds())) {
				c17.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c18.getGlobalBounds())) {
				c18.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c19.getGlobalBounds())) {
				c19.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
		}
		if (Keyboard::isKeyPressed(Keyboard::Key::Right)) {
			pacman.move(7, 0);
			cnty = 0;
			cntx++;
			if (pacman.getGlobalBounds().intersects(b1.getGlobalBounds())) {
				pacman.move(-7, 0);
			}
			if (pacman.getGlobalBounds().intersects(b2.getGlobalBounds())) {
				pacman.move(-7, 0);
			}
			if (pacman.getGlobalBounds().intersects(b3.getGlobalBounds())) {
				pacman.move(-7, 0);
			}
			if (pacman.getGlobalBounds().intersects(b4.getGlobalBounds())) {
				pacman.move(-7, 0);
			}
			if (pacman.getGlobalBounds().intersects(b5.getGlobalBounds())) {
				pacman.move(-7, 0);
			}
			if (pacman.getGlobalBounds().intersects(b6.getGlobalBounds())) {
				pacman.move(-7, 0);
			}
			if (pacman.getGlobalBounds().intersects(b7.getGlobalBounds())) {
				pacman.move(-7, 0);
			}
			if (pacman.getGlobalBounds().intersects(b8.getGlobalBounds())) {
				pacman.move(-7, 0);
			}
			if (pacman.getGlobalBounds().intersects(l1.getGlobalBounds())) {
				pacman.move(-7, 0);
			}
			if (pacman.getGlobalBounds().intersects(l2.getGlobalBounds())) {
				pacman.move(-7, 0);
			}
			if (pacman.getGlobalBounds().intersects(l3.getGlobalBounds())) {
				pacman.move(-7, 0);
			}
			if (pacman.getGlobalBounds().intersects(l4.getGlobalBounds())) {
				pacman.move(-7, 0);
			}
			if (pacman.getGlobalBounds().intersects(c1.getGlobalBounds())) {
				c1.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c2.getGlobalBounds())) {
				c2.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c3.getGlobalBounds())) {
				c3.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c4.getGlobalBounds())) {
				c4.setPosition(-100, -100);
				coin.play();
				score += 10;
			}
			if (pacman.getGlobalBounds().intersects(c5.getGlobalBounds())) {
				c5.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c6.getGlobalBounds())) {
				c6.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c7.getGlobalBounds())) {
				c7.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c8.getGlobalBounds())) {
				c8.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c9.getGlobalBounds())) {
				c9.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c10.getGlobalBounds())) {
				c10.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c12.getGlobalBounds())) {
				c12.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c13.getGlobalBounds())) {
				c13.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c14.getGlobalBounds())) {
				c14.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c15.getGlobalBounds())) {
				c15.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c16.getGlobalBounds())) {
				c16.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c17.getGlobalBounds())) {
				c17.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c18.getGlobalBounds())) {
				c18.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c19.getGlobalBounds())) {
				c19.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
		}
		if (Keyboard::isKeyPressed(Keyboard::Key::Up)) {
			pacman.move(0,-7);
			cnty = 2;
			cntx++;
			if (pacman.getGlobalBounds().intersects(b1.getGlobalBounds())) {
				pacman.move(0,7);
			}
			if (pacman.getGlobalBounds().intersects(b2.getGlobalBounds())) {
				pacman.move(0, 7);
			}
			if (pacman.getGlobalBounds().intersects(b3.getGlobalBounds())) {
				pacman.move(0, 7);
			}
			if (pacman.getGlobalBounds().intersects(b4.getGlobalBounds())) {
				pacman.move(0, 7);
			}
			if (pacman.getGlobalBounds().intersects(b5.getGlobalBounds())) {
				pacman.move(0, 7);
			}
			if (pacman.getGlobalBounds().intersects(b6.getGlobalBounds())) {
				pacman.move(0, 7);
			}
			if (pacman.getGlobalBounds().intersects(b7.getGlobalBounds())) {
				pacman.move(0, 7);
			}
			if (pacman.getGlobalBounds().intersects(b8.getGlobalBounds())) {
				pacman.move(0, 7);
			}
			if (pacman.getGlobalBounds().intersects(l1.getGlobalBounds())) {
				pacman.move(0, 7);
			}
			if (pacman.getGlobalBounds().intersects(l2.getGlobalBounds())) {
				pacman.move(0, 7);
			}
			if (pacman.getGlobalBounds().intersects(l3.getGlobalBounds())) {
				pacman.move(0, 7);
			}
			if (pacman.getGlobalBounds().intersects(l4.getGlobalBounds())) {
				pacman.move(0, 7);
			}
			if (pacman.getGlobalBounds().intersects(c1.getGlobalBounds())) {
				c1.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c2.getGlobalBounds())) {
				c2.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c3.getGlobalBounds())) {
				c3.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c4.getGlobalBounds())) {
				c4.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c5.getGlobalBounds())) {
				c5.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c6.getGlobalBounds())) {
				c6.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c7.getGlobalBounds())) {
				c7.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c8.getGlobalBounds())) {
				c8.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c9.getGlobalBounds())) {
				c9.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c10.getGlobalBounds())) {
				c10.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c12.getGlobalBounds())) {
				c12.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c13.getGlobalBounds())) {
				c13.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c14.getGlobalBounds())) {
				c14.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c15.getGlobalBounds())) {
				c15.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c16.getGlobalBounds())) {
				c16.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c17.getGlobalBounds())) {
				c17.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c18.getGlobalBounds())) {
				c18.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c19.getGlobalBounds())) {
				c19.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			
		}
		if (Keyboard::isKeyPressed(Keyboard::Key::Down)) {
			pacman.move(0, 7);
			cnty = 3;
			cntx++;
			if (pacman.getGlobalBounds().intersects(b1.getGlobalBounds())) {
				pacman.move(0, -7);
			}
			if (pacman.getGlobalBounds().intersects(b2.getGlobalBounds())) {
				pacman.move(0, -7);
			}
			if (pacman.getGlobalBounds().intersects(b3.getGlobalBounds())) {
				pacman.move(0, -7);
			}
			if (pacman.getGlobalBounds().intersects(b4.getGlobalBounds())) {
				pacman.move(0, -7);
			}
			if (pacman.getGlobalBounds().intersects(b5.getGlobalBounds())) {
				pacman.move(0, -7);
			}
			if (pacman.getGlobalBounds().intersects(b6.getGlobalBounds())) {
				pacman.move(0, -7);
			}
			if (pacman.getGlobalBounds().intersects(b7.getGlobalBounds())) {
				pacman.move(0, -7);
			}
			if (pacman.getGlobalBounds().intersects(l1.getGlobalBounds())) {
				pacman.move(0, -7);
			}
			if (pacman.getGlobalBounds().intersects(l2.getGlobalBounds())) {
				pacman.move(0, -7);
			}
			if (pacman.getGlobalBounds().intersects(l3.getGlobalBounds())) {
				pacman.move(0, -7);
			}
			if (pacman.getGlobalBounds().intersects(l4.getGlobalBounds())) {
				pacman.move(0, -7);
			}
			if (pacman.getGlobalBounds().intersects(b8 .getGlobalBounds())) {
				pacman.move(0, -7);
			}
			if (pacman.getGlobalBounds().intersects(c1.getGlobalBounds())) {
				c1.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c2.getGlobalBounds())) {
				c2.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c3.getGlobalBounds())) {
				c3.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c4.getGlobalBounds())) {
				c4.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c5.getGlobalBounds())) {
				c5.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c6.getGlobalBounds())) {
				c6.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c7.getGlobalBounds())) {
				c7.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c8.getGlobalBounds())) {
				c8.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c9.getGlobalBounds())) {
				c9.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c10.getGlobalBounds())) {
				c10.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c12.getGlobalBounds())) {
				c12.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c13.getGlobalBounds())) {
				c13.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c14.getGlobalBounds())) {
				c14.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c15.getGlobalBounds())) {
				c15.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c16.getGlobalBounds())) {
				c16.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c17.getGlobalBounds())) {
				c17.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c18.getGlobalBounds())) {
				c18.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
			if (pacman.getGlobalBounds().intersects(c19.getGlobalBounds())) {
				c19.setPosition(-100, -100);
				score += 10;
				coin.play();
			}
		}
		cntx %= 2;
		pacman.setTextureRect(IntRect(cntx * 14.5, cnty * 15, 15, 14.5));
		
		stringstream strr;
		strr << score;
		score2.setString(strr.str());
		window.clear();
		window.draw(b1);
		window.draw(b2);
		window.draw(b3);
		window.draw(b4);
		window.draw(b5);
		window.draw(b6);
		window.draw(l1);
		window.draw(l2);
		window.draw(l3);
		window.draw(l4);
		window.draw(b7);
		window.draw(b8);
		window.draw(c1);
		window.draw(c2);
		window.draw(c3);
		window.draw(c4);
		window.draw(c5);
		window.draw(c6);
		window.draw(c7);
		window.draw(c8);
		window.draw(c9);
		window.draw(c10);
		window.draw(c12);
		window.draw(c13);
		window.draw(c14);
		window.draw(c15);
		window.draw(c16);
		window.draw(c17);
		window.draw(c18);
		window.draw(c19);
		window.draw(pacman);
		window.draw(score1);
		window.draw(score2);
		window.display();
	}

	
}
